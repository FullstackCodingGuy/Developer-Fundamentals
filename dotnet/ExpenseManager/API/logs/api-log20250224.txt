2025-02-24 11:12:01.776 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 11:12:01.896 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 11:12:01.905 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 05:42:01.901981+00:00');
SELECT changes();
2025-02-24 11:12:01.969 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 11:12:01.975 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 11:12:01.977 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 11:12:01.986 +05:30 [INF] Applying migration '20250224054152_CategoriesCrud'.
2025-02-24 11:12:01.991 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Categories" RENAME COLUMN "Title" TO "Name";
2025-02-24 11:12:01.991 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250224054152_CategoriesCrud', '9.0.2');
2025-02-24 11:12:01.992 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 11:12:20.523 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 11:12:20.633 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 11:12:20.642 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 05:42:20.639076+00:00');
SELECT changes();
2025-02-24 11:12:20.709 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 11:12:20.715 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 11:12:20.717 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 11:12:20.725 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 11:12:20.726 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 11:12:21.236 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 11:12:21.236 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 11:12:21.238 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 11:12:21.238 +05:30 [INF] Hosting environment: Development
2025-02-24 11:12:21.238 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 11:12:31.548 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - null null
2025-02-24 11:12:31.676 +05:30 [INF] HTTP GET /swagger/index.html responded 200 in 97.4667 ms
2025-02-24 11:12:31.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - 200 null text/html;charset=utf-8 137.2203ms
2025-02-24 11:12:31.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - null null
2025-02-24 11:12:31.959 +05:30 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 101.3699 ms
2025-02-24 11:12:31.960 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 102.1099ms
2025-02-24 11:12:37.370 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/categories - null null
2025-02-24 11:12:37.380 +05:30 [INF] No cached response available for this request.
2025-02-24 11:12:37.395 +05:30 [INF] Executing endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:12:37.417 +05:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CategoryController (Api).
2025-02-24 11:12:37.659 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Categories" AS "c"
2025-02-24 11:12:37.671 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Category, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 11:12:37.701 +05:30 [INF] Executed action CategoryController.GetAll (Api) in 280.3913ms
2025-02-24 11:12:37.701 +05:30 [INF] Executed endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:12:37.702 +05:30 [INF] The response could not be cached for this request.
2025-02-24 11:12:37.702 +05:30 [INF] HTTP GET /api/categories responded 200 in 328.3633 ms
2025-02-24 11:12:37.705 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/categories - 200 null application/json; charset=utf-8 335.1621ms
2025-02-24 11:12:51.438 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5001/api/categories - application/json 30
2025-02-24 11:12:51.440 +05:30 [INF] CORS policy execution successful.
2025-02-24 11:12:51.441 +05:30 [INF] Executing endpoint 'CategoryController.Create (Api)'
2025-02-24 11:12:51.450 +05:30 [INF] Route matched with {action = "Create", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(ExpenseManager.Domain.Entities.Category) on controller CategoryController (Api).
2025-02-24 11:13:14.994 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 11:13:15.083 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 11:13:15.090 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 05:43:15.088371+00:00');
SELECT changes();
2025-02-24 11:13:15.155 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 11:13:15.160 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 11:13:15.163 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 11:13:15.170 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 11:13:15.171 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 11:13:15.596 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 11:13:15.596 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 11:13:15.597 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 11:13:15.598 +05:30 [INF] Hosting environment: Development
2025-02-24 11:13:15.598 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 11:13:20.682 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - null null
2025-02-24 11:13:20.824 +05:30 [INF] HTTP GET /swagger/index.html responded 200 in 110.0424 ms
2025-02-24 11:13:20.832 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - 200 null text/html;charset=utf-8 151.5977ms
2025-02-24 11:13:21.035 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - null null
2025-02-24 11:13:21.143 +05:30 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 107.1131 ms
2025-02-24 11:13:21.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 107.943ms
2025-02-24 11:13:34.672 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5001/api/categories - application/json 32
2025-02-24 11:13:34.678 +05:30 [INF] CORS policy execution successful.
2025-02-24 11:13:34.694 +05:30 [INF] Executing endpoint 'CategoryController.Create (Api)'
2025-02-24 11:13:34.722 +05:30 [INF] Route matched with {action = "Create", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(ExpenseManager.Domain.Entities.Category) on controller CategoryController (Api).
2025-02-24 11:13:34.929 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Name")
VALUES (@p0)
RETURNING "Id";
2025-02-24 11:13:34.962 +05:30 [INF] Executing CreatedAtActionResult, writing value of type 'ExpenseManager.Domain.Entities.Category'.
2025-02-24 11:13:35.007 +05:30 [INF] Executed action CategoryController.Create (Api) in 281.4726ms
2025-02-24 11:13:35.007 +05:30 [INF] Executed endpoint 'CategoryController.Create (Api)'
2025-02-24 11:13:35.008 +05:30 [INF] HTTP POST /api/categories responded 201 in 332.8682 ms
2025-02-24 11:13:35.012 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5001/api/categories - 201 null application/json; charset=utf-8 339.7846ms
2025-02-24 11:13:46.871 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/categories - null null
2025-02-24 11:13:46.875 +05:30 [INF] No cached response available for this request.
2025-02-24 11:13:46.877 +05:30 [INF] Executing endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:13:46.880 +05:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CategoryController (Api).
2025-02-24 11:13:47.129 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Categories" AS "c"
2025-02-24 11:13:47.132 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Category, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 11:13:47.135 +05:30 [INF] Executed action CategoryController.GetAll (Api) in 254.6633ms
2025-02-24 11:13:47.135 +05:30 [INF] Executed endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:13:47.136 +05:30 [INF] The response could not be cached for this request.
2025-02-24 11:13:47.136 +05:30 [INF] HTTP GET /api/categories responded 200 in 263.8498 ms
2025-02-24 11:13:47.136 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/categories - 200 null application/json; charset=utf-8 265.1237ms
2025-02-24 11:14:33.263 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5001/api/categories - application/json 34
2025-02-24 11:14:33.270 +05:30 [INF] CORS policy execution successful.
2025-02-24 11:14:33.270 +05:30 [INF] Executing endpoint 'CategoryController.Create (Api)'
2025-02-24 11:14:33.270 +05:30 [INF] Route matched with {action = "Create", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(ExpenseManager.Domain.Entities.Category) on controller CategoryController (Api).
2025-02-24 11:14:33.278 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 7)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Name")
VALUES (@p0)
RETURNING "Id";
2025-02-24 11:14:33.279 +05:30 [INF] Executing CreatedAtActionResult, writing value of type 'ExpenseManager.Domain.Entities.Category'.
2025-02-24 11:14:33.280 +05:30 [INF] Executed action CategoryController.Create (Api) in 9.3499ms
2025-02-24 11:14:33.280 +05:30 [INF] Executed endpoint 'CategoryController.Create (Api)'
2025-02-24 11:14:33.280 +05:30 [INF] HTTP POST /api/categories responded 201 in 10.9267 ms
2025-02-24 11:14:33.280 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5001/api/categories - 201 null application/json; charset=utf-8 21.6915ms
2025-02-24 11:14:35.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/categories - null null
2025-02-24 11:14:35.972 +05:30 [INF] No cached response available for this request.
2025-02-24 11:14:35.972 +05:30 [INF] Executing endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:14:35.972 +05:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CategoryController (Api).
2025-02-24 11:14:35.974 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Categories" AS "c"
2025-02-24 11:14:35.982 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Category, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 11:14:36.005 +05:30 [INF] Executed action CategoryController.GetAll (Api) in 32.4336ms
2025-02-24 11:14:36.005 +05:30 [INF] Executed endpoint 'CategoryController.GetAll (Api)'
2025-02-24 11:14:36.005 +05:30 [INF] The response could not be cached for this request.
2025-02-24 11:14:36.005 +05:30 [INF] HTTP GET /api/categories responded 200 in 33.5569 ms
2025-02-24 11:14:36.005 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/categories - 200 null application/json; charset=utf-8 33.9943ms
2025-02-24 12:57:12.601 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 12:57:12.704 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 12:57:12.712 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 07:27:12.709149+00:00');
SELECT changes();
2025-02-24 12:57:12.777 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 12:57:12.783 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 12:57:12.785 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 12:57:12.794 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 12:57:12.795 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 12:57:13.236 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 12:57:13.236 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 12:57:13.238 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 12:57:13.239 +05:30 [INF] Hosting environment: Development
2025-02-24 12:57:13.239 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 12:57:18.893 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - null null
2025-02-24 12:57:19.124 +05:30 [INF] HTTP GET /swagger/index.html responded 200 in 186.7605 ms
2025-02-24 12:57:19.139 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - 200 null text/html;charset=utf-8 247.1338ms
2025-02-24 12:57:19.418 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - null null
2025-02-24 12:57:19.567 +05:30 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 148.2366 ms
2025-02-24 12:57:19.568 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 149.329ms
2025-02-24 12:57:23.127 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/categories - null null
2025-02-24 12:57:23.136 +05:30 [INF] No cached response available for this request.
2025-02-24 12:57:23.152 +05:30 [INF] Executing endpoint 'CategoryController.GetAll (Api)'
2025-02-24 12:57:23.174 +05:30 [INF] Route matched with {action = "GetAll", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller CategoryController (Api).
2025-02-24 12:57:23.411 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Categories" AS "c"
2025-02-24 12:57:23.466 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Category, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 12:57:23.495 +05:30 [INF] Executed action CategoryController.GetAll (Api) in 317.4186ms
2025-02-24 12:57:23.495 +05:30 [INF] Executed endpoint 'CategoryController.GetAll (Api)'
2025-02-24 12:57:23.496 +05:30 [INF] The response could not be cached for this request.
2025-02-24 12:57:23.496 +05:30 [INF] HTTP GET /api/categories responded 200 in 366.4983 ms
2025-02-24 12:57:23.500 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/categories - 200 null application/json; charset=utf-8 373.1107ms
2025-02-24 12:57:40.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Expense - null null
2025-02-24 12:57:40.614 +05:30 [INF] No cached response available for this request.
2025-02-24 12:57:40.614 +05:30 [INF] Executing endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:57:40.621 +05:30 [INF] Route matched with {action = "GetAllExpenses", controller = "Expense"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ExpenseManager.Domain.Entities.Expense]]] GetAllExpenses() on controller ExpenseManager.API.Controllers.ExpenseController (Api).
2025-02-24 12:57:48.738 +05:30 [INF] Executed action ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api) in 8117.5348ms
2025-02-24 12:57:48.739 +05:30 [INF] Executed endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:57:48.833 +05:30 [ERR] HTTP GET /api/Expense responded 500 in 8219.8226 ms
System.NotImplementedException: The method or operation is not implemented.
   at ExpenseManager.Application.Services.ExpenseServiceApi.GetAllExpensesAsync() in /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/Application/Services/ExpenseServiceApi.cs:line 30
   at ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses() in /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API/Controllers/ExpenseController.cs:line 24
   at lambda_method40(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API/Program.cs:line 218
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.ResponseCompression.ResponseCompressionMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.ResponseCaching.ResponseCachingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-02-24 12:58:14.651 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 12:58:14.736 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 12:58:14.744 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 07:28:14.742535+00:00');
SELECT changes();
2025-02-24 12:58:14.813 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 12:58:14.819 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 12:58:14.823 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 12:58:14.830 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 12:58:14.831 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 12:58:15.238 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 12:58:15.238 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 12:58:15.240 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 12:58:15.240 +05:30 [INF] Hosting environment: Development
2025-02-24 12:58:15.240 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 12:58:17.803 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Expense - null null
2025-02-24 12:58:17.847 +05:30 [INF] No cached response available for this request.
2025-02-24 12:58:17.860 +05:30 [INF] Executing endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:58:17.878 +05:30 [INF] Route matched with {action = "GetAllExpenses", controller = "Expense"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ExpenseManager.Domain.Entities.Expense]]] GetAllExpenses() on controller ExpenseManager.API.Controllers.ExpenseController (Api).
2025-02-24 12:58:18.111 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "e"."Id", "e"."Amount", "e"."Category", "e"."Date", "e"."Description", "e"."Title"
FROM "Expenses" AS "e"
2025-02-24 12:58:18.177 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Expense, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 12:58:18.243 +05:30 [INF] Executed action ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api) in 353.8214ms
2025-02-24 12:58:18.247 +05:30 [INF] Executed endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:58:18.248 +05:30 [INF] The response could not be cached for this request.
2025-02-24 12:58:18.250 +05:30 [INF] HTTP GET /api/Expense responded 200 in 421.3048 ms
2025-02-24 12:58:18.256 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Expense - 200 null application/json; charset=utf-8 454.4472ms
2025-02-24 12:58:31.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/api/Expense - null null
2025-02-24 12:58:31.352 +05:30 [INF] No cached response available for this request.
2025-02-24 12:58:31.352 +05:30 [INF] Executing endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:58:31.353 +05:30 [INF] Route matched with {action = "GetAllExpenses", controller = "Expense"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[ExpenseManager.Domain.Entities.Expense]]] GetAllExpenses() on controller ExpenseManager.API.Controllers.ExpenseController (Api).
2025-02-24 12:58:31.404 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "e"."Id", "e"."Amount", "e"."Category", "e"."Date", "e"."Description", "e"."Title"
FROM "Expenses" AS "e"
2025-02-24 12:58:31.405 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExpenseManager.Domain.Entities.Expense, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-02-24 12:58:31.405 +05:30 [INF] Executed action ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api) in 52.5562ms
2025-02-24 12:58:31.406 +05:30 [INF] Executed endpoint 'ExpenseManager.API.Controllers.ExpenseController.GetAllExpenses (Api)'
2025-02-24 12:58:31.406 +05:30 [INF] The response could not be cached for this request.
2025-02-24 12:58:31.406 +05:30 [INF] HTTP GET /api/Expense responded 200 in 55.5770 ms
2025-02-24 12:58:31.406 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/api/Expense - 200 null application/json; charset=utf-8 58.0707ms
2025-02-24 15:48:04.741 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 15:48:04.874 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 15:48:04.886 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:18:04.881579+00:00');
SELECT changes();
2025-02-24 15:48:04.979 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 15:48:04.987 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 15:48:04.991 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 15:48:05.001 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 15:48:05.002 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 15:48:05.069 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 15:48:05.139 +05:30 [INF] Creating key {9d0cdd63-89cf-4f93-b036-5eb256084214} with creation date 2025-02-24 10:18:05Z, activation date 2025-02-24 10:18:05Z, and expiration date 2025-05-25 10:18:05Z.
2025-02-24 15:48:05.146 +05:30 [WRN] No XML encryptor configured. Key {9d0cdd63-89cf-4f93-b036-5eb256084214} may be persisted to storage in unencrypted form.
2025-02-24 15:48:05.150 +05:30 [INF] Writing data to file '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys/key-9d0cdd63-89cf-4f93-b036-5eb256084214.xml'.
2025-02-24 15:48:05.794 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 15:48:05.794 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 15:48:05.797 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 15:48:05.804 +05:30 [INF] Hosting environment: Development
2025-02-24 15:48:05.810 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 15:48:13.420 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/index.html - null null
2025-02-24 15:48:13.695 +05:30 [INF] HTTP GET /swagger/index.html responded 200 in 244.3281 ms
2025-02-24 15:48:13.705 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/index.html - 200 null text/html;charset=utf-8 287.7191ms
2025-02-24 15:48:14.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - null null
2025-02-24 15:48:14.180 +05:30 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 144.3248 ms
2025-02-24 15:48:14.180 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 145.8295ms
2025-02-24 15:48:21.803 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5001/secure - null null
2025-02-24 15:48:21.814 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:48:21.819 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:48:21.820 +05:30 [INF] HTTP GET /secure responded 401 in 15.6581 ms
2025-02-24 15:48:21.820 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5001/secure - 401 0 null 16.5453ms
2025-02-24 15:48:55.487 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:48:55.677 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuerAsync(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.InternalValidators.ValidateAfterSignatureFailed(SecurityToken securityToken, Nullable`1 notBefore, Nullable`1 expires, IEnumerable`1 audiences, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:48:55.682 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
2025-02-24 15:48:55.684 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:48:55.685 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:48:55.685 +05:30 [INF] HTTP GET /secure responded 401 in 186.4905 ms
2025-02-24 15:48:55.698 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 211.0104ms
2025-02-24 15:48:58.927 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:48:58.936 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuerAsync(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.InternalValidators.ValidateAfterSignatureFailed(SecurityToken securityToken, Nullable`1 notBefore, Nullable`1 expires, IEnumerable`1 audiences, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:48:58.937 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
2025-02-24 15:48:58.939 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:48:58.939 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:48:58.939 +05:30 [INF] HTTP GET /secure responded 401 in 11.3975 ms
2025-02-24 15:48:58.939 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 11.9692ms
2025-02-24 15:50:29.581 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 15:50:29.706 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 15:50:29.716 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:20:29.713746+00:00');
SELECT changes();
2025-02-24 15:50:29.808 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 15:50:29.817 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 15:50:29.820 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 15:50:29.830 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 15:50:29.832 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 15:50:29.899 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 15:50:30.472 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 15:50:30.472 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 15:50:30.475 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 15:50:30.475 +05:30 [INF] Hosting environment: Development
2025-02-24 15:50:30.475 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 15:50:36.605 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:50:36.934 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuerAsync(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.Tokens.InternalValidators.ValidateAfterSignatureFailed(SecurityToken securityToken, Nullable`1 notBefore, Nullable`1 expires, IEnumerable`1 audiences, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:50:36.940 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10204: Unable to validate issuer. validationParameters.ValidIssuer is null or whitespace AND validationParameters.ValidIssuers is null or empty.
2025-02-24 15:50:36.950 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:50:36.957 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:50:36.960 +05:30 [INF] HTTP GET /secure responded 401 in 322.7453 ms
2025-02-24 15:50:36.982 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 379.5706ms
2025-02-24 15:51:35.301 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 15:51:35.427 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 15:51:35.438 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:21:35.435637+00:00');
SELECT changes();
2025-02-24 15:51:35.530 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 15:51:35.539 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 15:51:35.542 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 15:51:35.552 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 15:51:35.553 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 15:51:35.619 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 15:51:36.174 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 15:51:36.174 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 15:51:36.177 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 15:51:36.177 +05:30 [INF] Hosting environment: Development
2025-02-24 15:51:36.178 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 15:51:44.858 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:51:45.497 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:51:45.536 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
2025-02-24 15:51:45.547 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:51:45.554 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:51:45.557 +05:30 [INF] HTTP GET /secure responded 401 in 667.1464 ms
2025-02-24 15:51:45.579 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 723.7434ms
2025-02-24 15:52:05.313 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:52:05.318 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:52:05.319 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
2025-02-24 15:52:05.319 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:52:05.320 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:52:05.320 +05:30 [INF] HTTP GET /secure responded 401 in 5.3358 ms
2025-02-24 15:52:05.320 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 7.0309ms
2025-02-24 15:52:28.817 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:52:28.819 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:52:28.820 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
2025-02-24 15:52:28.821 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:52:28.822 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:52:28.822 +05:30 [INF] HTTP GET /secure responded 401 in 4.3377 ms
2025-02-24 15:52:28.822 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 4.8412ms
2025-02-24 15:57:52.486 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:57:52.489 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:27:52 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:57:52.489 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:27:52 AM'.
2025-02-24 15:57:52.490 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:57:52.490 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:57:52.490 +05:30 [INF] HTTP GET /secure responded 401 in 2.4564 ms
2025-02-24 15:57:52.490 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 4.0583ms
2025-02-24 15:58:55.415 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:58:55.417 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:28:55 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:58:55.417 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:28:55 AM'.
2025-02-24 15:58:55.418 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:58:55.418 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:58:55.418 +05:30 [INF] HTTP GET /secure responded 401 in 1.5017 ms
2025-02-24 15:58:55.418 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 3.0484ms
2025-02-24 15:59:19.835 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 15:59:19.837 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:29:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 15:59:19.837 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:29:19 AM'.
2025-02-24 15:59:19.837 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 15:59:19.838 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 15:59:19.838 +05:30 [INF] HTTP GET /secure responded 401 in 1.7532 ms
2025-02-24 15:59:19.838 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 2.7766ms
2025-02-24 16:00:49.406 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 16:00:49.561 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 16:00:49.572 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:30:49.569121+00:00');
SELECT changes();
2025-02-24 16:00:49.666 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 16:00:49.674 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 16:00:49.678 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 16:00:49.688 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 16:00:49.689 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 16:00:49.752 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 16:00:50.404 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 16:00:50.404 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 16:00:50.407 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 16:00:50.407 +05:30 [INF] Hosting environment: Development
2025-02-24 16:00:50.407 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 16:00:56.674 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:00:57.057 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 16:00:57.096 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10214: Audience validation failed. Audiences: 'master-realm, account'. Did not match: validationParameters.ValidAudience: 'my-dotnet-api' or validationParameters.ValidAudiences: 'null'.
2025-02-24 16:00:57.108 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 16:00:57.115 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:00:57.120 +05:30 [INF] HTTP GET /secure responded 401 in 406.6307 ms
2025-02-24 16:00:57.147 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 475.1979ms
2025-02-24 16:03:17.994 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 16:03:18.153 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 16:03:18.165 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:33:18.161268+00:00');
SELECT changes();
2025-02-24 16:03:18.259 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 16:03:18.267 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 16:03:18.270 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 16:03:18.279 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 16:03:18.281 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 16:03:18.347 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 16:03:19.031 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 16:03:19.031 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 16:03:19.033 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 16:03:19.034 +05:30 [INF] Hosting environment: Development
2025-02-24 16:03:19.034 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 16:03:22.507 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:03:22.941 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:03:22.990 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:03:22.996 +05:30 [INF] HTTP GET /secure responded 200 in 454.1841 ms
2025-02-24 16:03:23.005 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 500.7388ms
2025-02-24 16:05:03.798 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 16:05:03.934 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 16:05:03.944 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:35:03.941525+00:00');
SELECT changes();
2025-02-24 16:05:04.037 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 16:05:04.045 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 16:05:04.048 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 16:05:04.058 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 16:05:04.059 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 16:05:04.126 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 16:05:04.724 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 16:05:04.724 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 16:05:04.739 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 16:05:04.739 +05:30 [INF] Hosting environment: Development
2025-02-24 16:05:04.739 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 16:05:08.567 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:05:08.934 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:35:08 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-02-24 16:05:08.972 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '24/02/2025 10:22:41 AM', Current time (UTC): '24/02/2025 10:35:08 AM'.
2025-02-24 16:05:08.982 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-02-24 16:05:08.989 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:05:08.993 +05:30 [INF] HTTP GET /secure responded 401 in 391.9901 ms
2025-02-24 16:05:09.016 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 401 0 null 451.471ms
2025-02-24 16:05:28.173 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:05:28.238 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:05:28.268 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:05:28.269 +05:30 [INF] HTTP GET /secure responded 200 in 94.2507 ms
2025-02-24 16:05:28.270 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 97.027ms
2025-02-24 16:07:44.735 +05:30 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-02-24 16:07:44.870 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-02-24 16:07:44.880 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-02-24 10:37:44.877518+00:00');
SELECT changes();
2025-02-24 16:07:44.972 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-02-24 16:07:44.981 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-02-24 16:07:44.985 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-02-24 16:07:44.995 +05:30 [INF] No migrations were applied. The database is already up to date.
2025-02-24 16:07:44.996 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-02-24 16:07:45.063 +05:30 [INF] User profile is available. Using '/Users/dhamodharabalaji/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-02-24 16:07:45.664 +05:30 [INF] Now listening on: https://localhost:5001
2025-02-24 16:07:45.664 +05:30 [INF] Now listening on: http://localhost:5000
2025-02-24 16:07:45.667 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-02-24 16:07:45.667 +05:30 [INF] Hosting environment: Development
2025-02-24 16:07:45.667 +05:30 [INF] Content root path: /Users/dhamodharabalaji/Desktop/Workspace/Github/Developer-Fundamentals/dotnet/ExpenseManager/API
2025-02-24 16:07:52.841 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:07:53.341 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:07:53.389 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:07:53.394 +05:30 [INF] HTTP GET /secure responded 200 in 506.2610 ms
2025-02-24 16:07:53.405 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 566.9154ms
2025-02-24 16:08:02.426 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/admin - null null
2025-02-24 16:08:02.430 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (admin)
2025-02-24 16:08:02.436 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:08:02.436 +05:30 [INF] HTTP GET /admin responded 401 in 8.2435 ms
2025-02-24 16:08:02.436 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/admin - 401 0 null 10.3372ms
2025-02-24 16:10:16.720 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/admin - null null
2025-02-24 16:10:16.725 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (admin)
2025-02-24 16:10:16.726 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:10:16.726 +05:30 [INF] HTTP GET /admin responded 401 in 4.7453 ms
2025-02-24 16:10:16.726 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/admin - 401 0 null 6.7763ms
2025-02-24 16:10:17.856 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/admin - null null
2025-02-24 16:10:17.857 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (admin)
2025-02-24 16:10:17.857 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:10:17.857 +05:30 [INF] HTTP GET /admin responded 401 in 0.3752 ms
2025-02-24 16:10:17.857 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/admin - 401 0 null 0.8018ms
2025-02-24 16:10:22.490 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:10:22.493 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:10:22.494 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:10:22.494 +05:30 [INF] HTTP GET /secure responded 200 in 3.8340 ms
2025-02-24 16:10:22.494 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 4.2328ms
2025-02-24 16:10:33.126 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:10:33.128 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:10:33.129 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:10:33.129 +05:30 [INF] HTTP GET /secure responded 200 in 2.1414 ms
2025-02-24 16:10:33.129 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 3.403ms
2025-02-24 16:10:36.841 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/secure - null null
2025-02-24 16:10:36.842 +05:30 [INF] Executing endpoint 'HTTP: GET /secure'
2025-02-24 16:10:36.842 +05:30 [INF] Executed endpoint 'HTTP: GET /secure'
2025-02-24 16:10:36.842 +05:30 [INF] HTTP GET /secure responded 200 in 1.1587 ms
2025-02-24 16:10:36.842 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/secure - 200 null text/plain; charset=utf-8 1.8ms
2025-02-24 16:10:40.123 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:5001/admin - null null
2025-02-24 16:10:40.124 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (admin)
2025-02-24 16:10:40.124 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-02-24 16:10:40.124 +05:30 [INF] HTTP GET /admin responded 401 in 0.4717 ms
2025-02-24 16:10:40.125 +05:30 [INF] Request finished HTTP/1.1 GET https://localhost:5001/admin - 401 0 null 1.3076ms
